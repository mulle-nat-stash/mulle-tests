#! /bin/sh


write_build_script()
{
   local name="$1"

   cat <<EOF
#!/usr/bin/env bash

LIBRARY_SHORTNAME="${name}"

. "mulle-tests/test-c-common.sh"
. "mulle-tests/test-tools-common.sh"
. "mulle-tests/test-sharedlib-common.sh"
. "mulle-tests/build-test-common.sh"
EOF
}


write_test_script()
{
   local name="$1"

   cat <<EOF
#!/usr/bin/env bash

LIBRARY_SHORTNAME="${name}"

. "mulle-tests/test-c-common.sh"
. "mulle-tests/test-tools-common.sh"
. "mulle-tests/test-sharedlib-common.sh"
. "mulle-tests/run-test-common.sh"
EOF
}


#
# it is assumed that mulle-tests is already installed
# in tests/mulle-tests
#
main()
{
   local directory
   local parent
   local name

   # move to what looks like the project directory
   while :
   do
      directory="`pwd`"
      name="`basename -- "${directory}"`"
      case "${name}" in
         mulle-tests|tests)
            cd ..
            continue
         ;;
      esac
      break
   done

   name="${1:-${name}}"

   mkdir tests 2> /dev/null

   if [ ! -f tests/build-test.sh ]
   then
      write_build_script "${name}" > tests/build-test.sh
      chmod 755 tests/build-test.sh
   else
      echo "tests/build-test.sh already exists" >&2
      exit 1
   fi

   if [ ! -f tests/build-test.sh ]
   then
      write_test_script "${name}" > tests/run-test.sh
      chmod 755 tests/run-test.sh
   else
      echo "tests/build-test.sh already exists" >&2
      exit 1
   fi
}


main "$@"
